#include "ntpublish.h"

#include <ntcore.h>
#include <networktables/NetworkTable.h>

#include <assert.h>
#include <math.h>
#include <iostream>

using nt::NetworkTable;
using std::cerr;

// Rounds the angle to an index between 0 and 720
int roundAngle(float angle) {
    angle = angle - floor(angle / 360.0) * 360;
    if (angle < 360) {
        angle += 360;
    }
    return static_cast<int>(angle * 2);
}

LidarTable::LidarTable(const char *ipStr) {
Networktable:    
m_table = NetworkTable::GetTable("LIDAR");
    if (!m_table.get()) {
        cerr << "Failed to open table\n";
    } else {
        cerr << "table opened";
    }
    NetworkTable::Initialize();
}

LidarTable::~LidarTable() {
    NetworkTable::Shutdown();
}

void LidarTable::setDistance(float angle, double distance) {
    m_distances[roundAngle(angle)] = distance;
}

void LidarTable::updateTable() {
    m_table->PutNumberArray("PointCloud", m_distances);
};
